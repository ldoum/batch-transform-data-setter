import bpy, math


def set_transform_lock_to_obj(item, info):
        
    item.lock_location = info["lock"][0]
    item.lock_rotation = info["lock"][1]
    item.lock_scale = info["lock"][2]
        

def set_coordinate_euler_for_obj(item, info):
    
    item.location = info["euler"][0]
    item.rotation_euler = info["euler"][1]
    item.scale = info["euler"][2]
             

def set_coordinate_quaternion_for_obj(item, info):
   
    item.location = info["quaternion"][0]
    item.rotation_quaternion = info["quaternion"][1]
    item.scale = info["quaternion"][2] 

    
def set_rotation_mode_for_obj(item, info):
  
    match(info["rot_mode"].lower()):
        
        case 'xyz': #option 1
            item.rotation_mode = 'XYZ'
              
        case 'xzy': #option 2
            item.rotation_mode = 'XZY'

        case 'yxz': #option 3
            item.rotation_mode = 'YXZ'
            
        case 'yzx': #option 4
            item.rotation_mode = 'YZX'
                  
        case 'zxy': #option 5
            item.rotation_mode = 'ZXY'
                  
        case 'zyx': #option 6
            item.rotation_mode = 'ZYX'
                   
        case 'quaternion': #option 7
            item.rotation_mode = 'QUATERNION'
                 
        case _:
            pass

#default mode
default = {
        
    "lock": [
        (False,False,False),
        (False,False,False),
        (False,False,False)
        ],
    "rot_mode": "XYZ",
    "euler": [
        (0.0,0.0,0.0),
        (0.0,0.0,0.0),
        (1,1,1)
        ],
    "quaternion": [
        (0.0,0.0,0.0),
        (0.0,0.0,0.0,0.0),
        (1,1,1)
        ]
}


def select_option():
    
    for every in bpy.context.selected_objects:
        
        #imitate user input toggle
        default["lock"] = [
                (False,False,False),
                (False,False,False),
                (True,True,True)
                ] 
    
        default["rot_mode"] = "xyz"
                
        default["euler"] = [
                (0.0,0.0,0.0),
                (math.radians(0.0),math.radians(0.0),math.radians(0.0)),
                (1,1,1)
                ]
        
        default["quaternion"] = [
                (0.0,0.0,0.0),
                (1,0,0,0),
                (1,1,1)
                ]
        #end input
        
        set_transform_lock_to_obj(every, default)
         
        set_rotation_mode_for_obj(every, default)
            
        if every.rotation_mode != 'QUATERNION':
                
            set_coordinate_euler_for_obj(every, default)
                    
        else:
                 
            set_coordinate_quaternion_for_obj(every, default)
             
                
select_option()

